/******************************************************************************
 *
 * 
 *
 * Copyright (C) 1997-2001 by Dimitri van Heesch.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation under the terms of the GNU General Public License is hereby 
 * granted. No representations are made about the suitability of this software 
 * for any purpose. It is provided "as is" without express or implied warranty.
 * See the GNU General Public License for more details.
 *
 * Documents produced by Doxygen are derivative works derived from the
 * input used in their production; they are not affected by this license.
 *
 */
/*! \page faq Frequently Asked Questions

<ol>
<li><b>How to get information on the index page in HTML?</b>
<p>
You should use the \\mainpage command inside a comment block like this:
\verbatim
/*! \mainpage My Personal Index Page
 *
 * \section intro Introduction
 *
 * This is the introduction.
 *
 * \section install Installation
 *
 * \subsection step1 Step 1: Opening the box
 *  
 * etc...
 */
\endverbatim

<li><b>Help, some/all of the members of my class / file / namespace 
       are not documented?</b>

  Check the following:
  <ol>
  <li>Is your class / file / namespace documented? If not, it will not 
      be extracted from the sources unless \c EXTRACT_ALL is set to \c YES
      in the config file.
  <li>Are the members private? If so, you must set \c EXTRACT_PRIVATE to \c YES
      to make them appear in the documentation.
  <li>Is there a function macro in your class that does not end with a 
      semicolon (e.g. MY_MACRO())? If so then you have to instruct 
      doxygen's preprocessor to remove it.

      This typically boils down to the following settings in the config file:

      \verbatim
ENABLE_PREPROCESSING   = YES
MACRO_EXPANSION        = YES
EXPAND_ONLY_PREDEF     = YES
PREDEFINED             = MY_MACRO()=
      \endverbatim

      Please read the \ref preprocessing "preprocessing" section of the
      manual for more information.
  </ol> 

<li><b>When I set EXTRACT_ALL to NO non of my functions are shown in the documentation.</b></li>

In order for global functions, variables, enums, typedefs, and defines 
to be documented you should document the file in which these commands are
located using a comment block containing a \\file (or \@file) 
command. 

Alternatively, you can put all members in a group (or module)
using the \\ingroup command and then document the group using a comment
block containing the \\defgroup command.
 
<li><b>How can I make doxygen ignore some code fragment?</b>
<p>
You can use Doxygen's preprocessor for this: 
If you put
\verbatim
#ifndef DOXYGEN_SHOULD_SKIP_THIS

 /* code that must be skipped by Doxygen */

#endif /* DOXYGEN_SHOULD_SKIP_THIS */
\endverbatim
around the blocks that should be hidden and put:
\verbatim
  PREDEFINED = DOXYGEN_SHOULD_SKIP_THIS
\endverbatim
in the config file then all blocks should be skipped by Doxygen as long
as <code>PREPROCESSING = YES</code>.

<li><b>How can I change what's after the <code>\#include</code> in the class documentation?</b>

You can document your class like

\verbatim
/*! \class MyClassName include.h path/include.h
 *
 *  Docs for MyClassName
 */
\endverbatim

To make doxygen put <br><br>
<code>
#include <path/include.h>
</code>

in the documentation of the class MyClassName regardless of the name of the actual 
header file in which the definition of MyClassName is contained.

If you want doxygen to show that the include file should be included using
brackets you should type:
\verbatim
/*! \class MyClassName include.h "path/include.h"
 *
 *  Docs for MyClassName
 */
\endverbatim

<li><b>How can I use tag files in combination with compressed HTML</b>

If you want to refer from one compressed HTML file 
\c a.chm to another compressed HTML file 
called \c b.chm, the
link in \c a.chm must have the following format:
\verbatim
<a href="b.chm::/file.html">
\endverbatim
Unfortunately this only works if both compressed HTML files are in the same 
directory.

As a result you must rename the generated \c index.chm files for all projects
into something unique and put all \c .chm files in one directory.

Suppose you have a project \e a referring to a project \e b using tag file
\c b.tag, then you could rename the \c index.chm for project \e a into
\c a.chm and the \c index.chm for project \e b into \c b.chm. In the 
configuration file for project \e a you write:
\verbatim
TAGFILES = b.tag=b.chm::
\endverbatim
or you can use \c installdox to set the links as follows:
\verbatim
installdox -lb.tag@b.chm::
\endverbatim

<li><b>I don't like the quick index that is put above each HTML page, what do I do?</b>

You can disable the index by setting DISABLE_INDEX to YES. Then you can
put in your own header file by writing your own header and feed that to
HTML_HEADER.

<li><b>The overall HTML output looks different, while I only wanted to 
       use my own html header file</b>

You probably forgot to include the stylesheet <code>doxygen.css</code> that 
doxygen generates. You can include this by putting
\verbatim
<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">
\endverbatim
In the HEAD section of the HTML page.

<li><b>Why does doxygen use Qt?</b>

The most important reason is to have a platform abstraction for most 
Unices and Windows by means of the QFile, QFileInfo, QDir, QDate, 
QTime and QIODevice classes. 
Another reason is for the nice and bug free utility classes, like QList, 
QDict, QString, QArray, QTextStream, QRegExp, QXML etc. 

The GUI front-end doxywizard uses Qt for... well... the GUI!

<li><b>How can I exclude all test directories from my directory tree?</b>

Simply put an exclude pattern like this in the configuration file:

\verbatim
EXCLUDE_PATTERNS = */test/*
\endverbatim

<li><b>Doxygen automatically generates a link to the 
       class MyClass somewhere in the running text. 
       How do I prevent that at a certain place?</b>

Put a \% in front of the class name. Like this: \%MyClass. Doxygen will then
remove the % and keep the word unlinked.

<li><b>Help! I get the cryptic message 
 "input buffer overflow, can't enlarge buffer because scanner uses REJECT"</b>

This error happens when doxygen lexical scanner has a rules that matches
more than 16K input character in one go. I've seen this happening 
on a very large generated file (>16K lines), where the built-in preprocessor 
converted it into an empty file (with >16K of newlines). Another case
where this might happen is if you have lines in you code with more than
16K characters.

</ol>

\htmlonly
Go to the <a href="trouble.html">next</a> section or return to the
 <a href="index.html">index</a>.
\endhtmlonly

*/

